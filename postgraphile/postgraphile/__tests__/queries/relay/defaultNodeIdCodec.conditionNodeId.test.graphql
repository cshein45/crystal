## expect(errors).toHaveLength(1)
#> dontLogErrors: true
## expect(errors[0].message).toEqual("Invalid node identifier for 'Person'")
## expect(errors[0].path).toEqual(['z_invalidAuthorId'])
#> graphileBuildOptions: { defaultNodeIdCodec: "pipeString" }
#> schema: ["d"]
#> extends: ["postgraphile/presets/relay:PostGraphileRelayPreset"]
query Q(
  $alice: ID! = "people|3"
  $post3: ID! = "posts|3"
  $undefined: ID
) {
  allPosts: allPosts(condition: { author: $undefined }) {
    # Filter doesn't do anything
    nodes {
      author {
        id
      }
      body
    }
  }
  alicesPosts: allPosts(condition: { author: $alice }) {
    nodes {
      author {
        id
      }
      body
    }
  }
  postsWithNoAuthor: allPosts(condition: { author: null }) {
    nodes {
      author {
        id
      }
      body
    }
  }
  z_invalidAuthorId: allPosts(condition: { author: $post3 }) {
    nodes {
      author {
        id
      }
      body
    }
  }
}
